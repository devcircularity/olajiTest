"use strict";exports.id=263,exports.ids=[263],exports.modules={3679:(e,a,t)=>{t.d(a,{Z:()=>s});var n=t(326),r=t(1135);function s({className:e,children:a,...t}){return n.jsx("button",{className:(0,r.Z)("btn-primary",e),...t,children:a})}},2607:(e,a,t)=>{t.d(a,{Z:()=>c});var n=t(326),r=t(7577),s=t(8307),i=t(1890);let d=(0,t(2881).Z)("chevron-right",[["path",{d:"m9 18 6-6-6-6",key:"mthhwq"}]]);var l=t(3679);function c({data:e,columns:a,actions:t,loading:c=!1,searchable:o=!1,searchPlaceholder:p="Search...",pagination:g,emptyMessage:x="No data available",className:u=""}){let[m,h]=(0,r.useState)(""),[y,v]=(0,r.useState)(null),f=o?e.filter(e=>Object.values(e).some(e=>String(e).toLowerCase().includes(m.toLowerCase()))):e,b=y?[...f].sort((e,a)=>{let t=e[y.key],n=a[y.key];return t<n?"asc"===y.direction?-1:1:t>n?"asc"===y.direction?1:-1:0}):f,w=e=>{v(a=>a?.key===e?{key:e,direction:"asc"===a.direction?"desc":"asc"}:{key:e,direction:"asc"})},k=(e,a)=>{let t=e[a.key];return a.render?a.render(t,e):t};return c?n.jsx("div",{className:`card ${u}`,children:(0,n.jsxs)("div",{className:"p-8 text-center",children:[n.jsx("div",{className:"inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-[--color-brand]"}),n.jsx("p",{className:"mt-2 text-neutral-600",children:"Loading..."})]})}):(0,n.jsxs)("div",{className:`card ${u}`,children:[o&&n.jsx("div",{className:"p-4 border-b border-neutral-200 dark:border-neutral-700",children:(0,n.jsxs)("div",{className:"relative",children:[n.jsx(s.Z,{className:"absolute left-3 top-1/2 transform -translate-y-1/2 text-neutral-400",size:16}),n.jsx("input",{type:"text",placeholder:p,value:m,onChange:e=>h(e.target.value),className:"w-full pl-10 pr-4 py-2 border border-neutral-300 dark:border-neutral-600 rounded-lg  bg-white dark:bg-neutral-800 focus:ring-2 focus:ring-[--color-brand] focus:border-transparent"})]})}),n.jsx("div",{className:"overflow-x-auto",children:(0,n.jsxs)("table",{className:"w-full",children:[n.jsx("thead",{className:"bg-neutral-50 dark:bg-neutral-800",children:(0,n.jsxs)("tr",{children:[a.map((e,a)=>n.jsx("th",{className:`px-4 py-3 text-left text-xs font-medium text-neutral-500 dark:text-neutral-400 uppercase tracking-wider
                    ${e.sortable?"cursor-pointer hover:bg-neutral-100 dark:hover:bg-neutral-700":""}
                    ${e.width?`w-${e.width}`:""}`,onClick:e.sortable?()=>w(String(e.key)):void 0,children:(0,n.jsxs)("div",{className:"flex items-center gap-1",children:[e.label,e.sortable&&y?.key===e.key&&n.jsx("span",{className:"text-[--color-brand]",children:"asc"===y.direction?"↑":"↓"})]})},a)),t&&t.length>0&&n.jsx("th",{className:"px-4 py-3 text-left text-xs font-medium text-neutral-500 dark:text-neutral-400 uppercase tracking-wider",children:"Actions"})]})}),n.jsx("tbody",{className:"divide-y divide-neutral-200 dark:divide-neutral-700",children:0===b.length?n.jsx("tr",{children:n.jsx("td",{colSpan:a.length+(t?1:0),className:"px-4 py-8 text-center text-neutral-500 dark:text-neutral-400",children:x})}):b.map((e,r)=>(0,n.jsxs)("tr",{className:"hover:bg-neutral-50 dark:hover:bg-neutral-800/50",children:[a.map((a,t)=>n.jsx("td",{className:"px-4 py-3 text-sm text-neutral-900 dark:text-neutral-100",children:k(e,a)},t)),t&&t.length>0&&n.jsx("td",{className:"px-4 py-3 text-sm",children:n.jsx("div",{className:"flex gap-2",children:t.map((a,t)=>(0,n.jsxs)(l.Z,{onClick:()=>a.onClick(e),className:`btn-sm ${"danger"===a.variant?"btn-danger":"secondary"===a.variant?"btn-secondary":"btn-primary"}`,disabled:a.disabled?.(e),children:[a.icon&&n.jsx("span",{className:"mr-1",children:a.icon}),a.label]},t))})})]},r))})]})}),g&&(0,n.jsxs)("div",{className:"px-4 py-3 border-t border-neutral-200 dark:border-neutral-700 flex items-center justify-between",children:[(0,n.jsxs)("p",{className:"text-sm text-neutral-600 dark:text-neutral-400",children:["Page ",g.currentPage," of ",g.totalPages]}),(0,n.jsxs)("div",{className:"flex gap-2",children:[(0,n.jsxs)(l.Z,{onClick:()=>g.onPageChange(g.currentPage-1),disabled:g.currentPage<=1,className:"btn-sm btn-secondary",children:[n.jsx(i.Z,{size:16}),"Previous"]}),(0,n.jsxs)(l.Z,{onClick:()=>g.onPageChange(g.currentPage+1),disabled:g.currentPage>=g.totalPages,className:"btn-sm btn-secondary",children:["Next",n.jsx(d,{size:16})]})]})]})]})}},4893:(e,a,t)=>{t.d(a,{Z:()=>n});let n=(0,t(2881).Z)("play",[["path",{d:"M5 5a2 2 0 0 1 3.008-1.728l11.997 6.998a2 2 0 0 1 .003 3.458l-12 7A2 2 0 0 1 5 19z",key:"10ikf1"}]])},3855:(e,a,t)=>{t.d(a,{Z:()=>n});let n=(0,t(2881).Z)("plus",[["path",{d:"M5 12h14",key:"1ays0h"}],["path",{d:"M12 5v14",key:"s699le"}]])},1405:(e,a,t)=>{t.d(a,{Z:()=>n});let n=(0,t(2881).Z)("refresh-cw",[["path",{d:"M3 12a9 9 0 0 1 9-9 9.75 9.75 0 0 1 6.74 2.74L21 8",key:"v9h5vc"}],["path",{d:"M21 3v5h-5",key:"1q7to0"}],["path",{d:"M21 12a9 9 0 0 1-9 9 9.75 9.75 0 0 1-6.74-2.74L3 16",key:"3uifl3"}],["path",{d:"M8 16H3v5",key:"1cv678"}]])},8307:(e,a,t)=>{t.d(a,{Z:()=>n});let n=(0,t(2881).Z)("search",[["path",{d:"m21 21-4.34-4.34",key:"14j7rj"}],["circle",{cx:"11",cy:"11",r:"8",key:"4ej97u"}]])},9508:(e,a,t)=>{t.d(a,{Z:()=>n});let n=(0,t(2881).Z)("square-pen",[["path",{d:"M12 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7",key:"1m0v6g"}],["path",{d:"M18.375 2.625a1 1 0 0 1 3 3l-9.013 9.014a2 2 0 0 1-.853.505l-2.873.84a.5.5 0 0 1-.62-.62l.84-2.873a2 2 0 0 1 .506-.852z",key:"ohrbg2"}]])},4019:(e,a,t)=>{t.d(a,{Z:()=>n});let n=(0,t(2881).Z)("x",[["path",{d:"M18 6 6 18",key:"1bl5f8"}],["path",{d:"m6 6 12 12",key:"d8bk6v"}]])},912:(e,a,t)=>{t.d(a,{q:()=>s});var n=t(2374);class r{async getConfigurationOverview(){return(await n.x.get("/api/admin/configuration/overview")).data}async getCacheStats(){return(await n.x.get("/api/admin/configuration/cache/stats")).data}async reloadCache(){return(await n.x.post("/api/admin/configuration/cache/reload")).data}async getVersions(){return(await n.x.get("/api/admin/intent-config/versions")).data}async createVersion(e){return(await n.x.post("/api/admin/intent-config/versions",e)).data}async promoteVersion(e){return(await n.x.post(`/api/admin/intent-config/versions/${e}/promote`)).data}async archiveVersion(e){return(await n.x.post(`/api/admin/intent-config/versions/${e}/archive`)).data}async getPatterns(e,a){let t=new URLSearchParams;return a?.handler&&t.append("handler",a.handler),a?.intent&&t.append("intent",a.intent),a?.kind&&t.append("kind",a.kind),(await n.x.get(`/api/admin/intent-config/versions/${e}/patterns?${t.toString()}`)).data}async createPattern(e,a){return(await n.x.post(`/api/admin/intent-config/versions/${e}/patterns`,a)).data}async updatePattern(e,a){return(await n.x.put(`/api/admin/intent-config/patterns/${e}`,a)).data}async deletePattern(e){return(await n.x.delete(`/api/admin/intent-config/patterns/${e}`)).data}async enablePattern(e){return(await n.x.post(`/api/admin/intent-config/patterns/${e}/enable`)).data}async testPatternWithPhrases(e,a){return(await n.x.post(`/api/admin/intent-config/patterns/${e}/test-phrases`,a)).data}async improvePattern(e,a,t){return(await n.x.post(`/api/admin/intent-config/patterns/${e}/improve`,{missed_phrases:a,false_positives:t})).data}async testPattern(e,a){return(await n.x.post(`/api/admin/intent-config/patterns/${e}/test`,{test_message:a})).data}async getTemplates(e,a){let t=new URLSearchParams;return a?.handler&&t.append("handler",a.handler),a?.template_type&&t.append("template_type",a.template_type),(await n.x.get(`/api/admin/intent-config/versions/${e}/templates?${t.toString()}`)).data}async createTemplate(e,a){return(await n.x.post(`/api/admin/intent-config/versions/${e}/templates`,a)).data}async updateTemplate(e,a){return(await n.x.put(`/api/admin/intent-config/templates/${e}`,a)).data}async deleteTemplate(e){return(await n.x.delete(`/api/admin/intent-config/templates/${e}`)).data}async enableTemplate(e){return(await n.x.post(`/api/admin/intent-config/templates/${e}/enable`)).data}async testClassify(e){return(await n.x.post("/api/admin/intent-config/test-classify",e)).data}async reloadConfig(){return(await n.x.post("/api/admin/intent-config/reload")).data}async getStats(){return(await n.x.get("/api/admin/intent-config/stats")).data}async getAvailableHandlers(){return(await n.x.get("/api/admin/intent-config/handlers")).data}async getAvailableIntents(e){let a=e?`?handler=${e}`:"";return(await n.x.get(`/api/admin/intent-config/intents${a}`)).data}async getPatternKinds(){return(await n.x.get("/api/admin/intent-config/pattern-kinds")).data}async getTemplateTypes(){return(await n.x.get("/api/admin/intent-config/template-types")).data}async generateRegexFromPhrases(e){console.log("\uD83D\uDD0D Sending regex generation request:",e);try{let a=await n.x.post("/api/admin/intent-config/generate-regex",e);console.log("\uD83D\uDD0D Raw API response:",a.data);let t={phrases:a.data.phrases||e.phrases,intent:a.data.intent||e.intent,pattern_kind:a.data.pattern_kind||e.pattern_kind||"positive",generated_regex:a.data.generated_regex||a.data.regex||"",confidence:a.data.confidence||0,explanation:a.data.explanation||"",test_matches:a.data.test_matches||[],errors:a.data.errors||[]};return console.log("\uD83D\uDD0D Processed regex generation response:",t),t}catch(e){throw console.error("❌ Regex generation API error:",e),e}}async exportConfiguration(e,a){return(await n.x.get(`/api/admin/intent-config/versions/${e}/export?format=${a}`,{responseType:"blob"})).data}async validateConfiguration(e){return(await n.x.post(`/api/admin/intent-config/versions/${e}/validate`)).data}}let s=new r}};